name: Build and Publish

on:
  # Trigger only when PR is merged to main branch
  pull_request:
    branches: [ main ]
    types: [ closed ]

  # Allow manual trigger
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
  JAVA_VERSION: '21'

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    # Only run if PR was merged (not just closed)
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Docker Hub credentials
        run: |
          if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "Error: DOCKERHUB_USERNAME secret is not set"
            exit 1
          fi
          echo "Docker Hub username: ${{ secrets.DOCKERHUB_USERNAME }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  notify:
    name: Notify
    runs-on: ubuntu-latest
    needs: [build]
    if: always()

    steps:
      - name: Notify on success
        if: needs.build.result == 'success'
        run: |
          echo "✅ Build and publish successful!"
          # Add notification commands (Slack, email, etc.)

      - name: Notify on failure
        if: needs.build.result == 'failure'
        run: |
          echo "❌ Build failed!"
          # Add failure notification commands